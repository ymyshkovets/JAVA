/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
    id 'io.qameta.allure' version '2.12.0'

}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation 'io.qameta.allure:allure-junit5:2.28.1'
    runtimeOnly 'org.aspectj:aspectjweaver:1.9.7'
    testImplementation 'io.rest-assured:rest-assured:5.3.2'
    implementation 'org.seleniumhq.selenium:selenium-java:4.29.0'
    testImplementation("org.assertj:assertj-core:3.27.2")






    //testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    //implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.yourcompany.yourproject.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}